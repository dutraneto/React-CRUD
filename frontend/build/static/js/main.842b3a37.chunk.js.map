{"version":3,"sources":["assets/img/logo.png","components/template/Header.jsx","components/template/Main.jsx","components/home/Home.jsx","components/user/UserCrud.jsx","main/Routes.jsx","components/template/Logo.jsx","components/template/NavItem.jsx","components/template/Nav.jsx","components/template/Footer.jsx","serviceWorker.js","index.js","main/App.jsx"],"names":["module","exports","__webpack_require__","p","template_Header","props","react_default","a","createElement","className","concat","icon","title","subtitle","template_Main","Fragment","children","Home","headerProps","UserCrud","Component","Routes","Switch","Route","exact","path","component","Redirect","from","to","template_Logo","Link","src","logo","alt","template_NavItem","users","contact","blog","careers","info","template_Nav","template_Footer","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.842b3a37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8cd1c759.png\";","import React from 'react'\nimport './Header.css'\n\nexport default props =>\n    <header className=\"header d-none d-sm-flex flex-column\">\n        <h1 className=\"mt-3\">\n            <i className={`fa fa-${props.icon}`}></i> {props.title}\n        </h1>\n        <p className=\"lead text-muted\">{props.subtitle}</p>\n    </header>","import React from 'react'\nimport './Main.css'\nimport Header from './Header'\n\nexport default props => \n    // I don't need my components wrapped in a div element. So, I use React.Fragment\n    <React.Fragment>\n        {/* the properties of main */}\n        <Header {...props}/>\n        <main className=\"content container-fluid\">\n            <section className=\"p-3 mt-3\">\n                {props.children}\n            </section>\n        </main>\n    </React.Fragment>\n    ","import React from 'react'\n\nimport Main from '../template/Main'\n\nexport default props =>\n    <Main icon=\"home\" title=\"start\" subtitle=\"2nd Project of React Studies\">\n        <div className=\"display-4\">Welcome!</div>\n        <hr/>\n        <p className=\"mb-0\">The porpuse of this system is to exemplify\n            a register developed using React.\n        </p>\n    </Main>","import React, { Component } from 'react'\nimport Main from '../template/Main'\n\nconst headerProps = {\n    icon: 'users',\n    title: 'Users',\n    subtitle: 'Users Register: Include, List, Change and Delete'\n}\n\nexport default class UserCrud extends Component {\n    render() {\n        return (\n            <Main {...headerProps}>\n                Users Register\n            </Main>\n        )\n    }\n\n}","import React from 'react'\n// using routes\nimport { Switch, Route, Redirect } from 'react-router'\n\nimport Home from '../components/home/Home'\nimport UserCrud from '../components/user/UserCrud'\n\n// What a ugly sintax\n//  Switch for mapping routes\nexport default props =>\n    <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/users' component={UserCrud} />\n        <Redirect from=\"*\" to='/' />\n    </Switch>","import './Logo.css'\nimport React from 'react'\nimport logo from '../../assets/img/logo.png'\nimport { Link } from 'react-router-dom'\nexport default props => \n    <aside className=\"logo\">\n        <Link to=\"/\" className=\"logo\">\n            <img src={logo} alt=\"\"/>\n        </Link>\n    </aside>","import React from 'react'\nimport './NavItem.css'\nimport { Link } from 'react-router-dom'\n\nexport default props =>\n    <ul className=\"\">\n        <li>\n            <Link to=\"/\">\n                <i className={`fa fa-${props.icon}`}></i> Home\n            </Link>\n        </li>\n        <li>\n            <Link to=\"/users\">\n                <i className={`fa fa-${props.users}`}></i> Users\n            </Link>\n        </li>\n        <li>\n            <Link to=\"/contact\">\n                <i className={`fa fa-${props.contact}`}></i> Contact\n            </Link>\n        </li>\n        <li>\n            <Link to=\"/blog\">\n                <i className={`fa fa-${props.blog}`}></i> Visit out Blog\n            </Link>\n        </li>\n        <li>\n            <Link to=\"/careers\">\n                <i className={`fa fa-${props.careers}`}></i> Careers\n            </Link>\n        </li>\n        <li>\n            <Link to=\"/info\">\n                <i className={`fa fa-${props.info}`}></i> Client Testimonials\n            </Link>\n        </li>\n    </ul>","import React from 'react'\nimport './Nav.css'\nimport NavItem from './NavItem'\n\nexport default props =>\n    <aside className=\"menu-area\">\n        <nav className=\"menu\">\n            <NavItem {...props} />\n        </nav>\n    </aside>","import './Footer.css'\nimport React from 'react'\n\nexport default props => \n    <footer className=\"footer\">\n        <span>\n             Developed with <i className=\"fa fa-heart text-danger\"></i>by\n                <strong className=\"text-danger\"> Jose Dutra</strong>\n        </span>\n    </footer>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport './App.css'\nimport React from 'react'\n// eslint-disable-next-line\nimport { HashRouter, BrowserRouter } from 'react-router-dom'\nimport Routes from './Routes'\nimport Logo from '../components/template/Logo'\nimport Nav from '../components/template/Nav'\nimport Footer from '../components/template/Footer'\n\nexport default props => \n    // I can use both HashRouter or BrowserRouter\n    <BrowserRouter> \n\n        <div className=\"app\">\n            <Logo />\n            <Nav icon=\"home\" info=\"info\" contact=\"envelope-o\" blog=\"globe\" careers=\"star-o\" users=\"users\"/>\n            {/* <Home /> Changed by Routes */}\n            <Routes />\n            <Footer />\n        </div>\n    </BrowserRouter>\n"],"sourceRoot":""}